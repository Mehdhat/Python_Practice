# -*- coding: utf-8 -*-
"""Mehdhat_day07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qkvpg6j-XiiJkDY9lIgYW1a-sJ32-qxS

## **Day 07 :**
"""

import pandas as pd
pd.read_excel("/content/drive/MyDrive/Files/Financial Sample.xlsx")

import pandas as pd
df=bt_1={'Name':["Mehdhat","Areeba","Dua","Ayra","Arsala"],
        'Salary':[22000,86000,60000,75000,37800],
        'Age':[23,34,34,23,23],
        'Gender':['Female','Female','Female','Female','Female']

      }

pd.DataFrame(df)

import pandas as pd
sheet=pd.DataFrame([['Biscuits','600'],['Drinks','300']],columns=['Qty ','Price'],index=['1','2'])
display(sheet)

import pandas as pd

df = pd.DataFrame([['Mehdhat', 'Dua'], ['22', '20']],
                  index=['Name', 'Age'],
                  columns=['C1', 'C2'])

display(df)

import pandas as pd

import numpy as np

df = pd.DataFrame(np.random.rand(10, 5), columns=['C1', 'C2', 'C3','C4', 'C5'])

display(df)

data = {"name":["steel", "gold", "bricks"], "weight": [420, 380, 390], "qty": [5, 6, 7]}

print(type(data))

df = pd.DataFrame(data)

display(df)

import pandas as pd

df = pd.read_excel('/content/drive/MyDrive/Files/sample_data.xlsx') #, delimiter=',')

# display data
display(df)

df.info()

df.head(5)

df.tail(5)

df.sample(5)

df.sample(frac=00.2)

display(df.describe())

df.describe(include='all')

df.describe(include='object')

df.describe(exclude='float32')

df.info()

!pip install pandas
import pandas as pd

# Try to read the file with the 'lines' argument set to True
df = pd.read_json('/content/drive/MyDrive/Files/sample_data.json', lines=True)

display(df)
display(df.describe(include='object'))
display(df.describe())

print(df.iloc[2, 5])

print(df.loc[0, 'Name'])

import pandas as pd

df = pd.read_excel('/content/drive/MyDrive/Files/sample_data.xlsx')
df

df.isnull().sum()

df.isnull().sum()

# Use df.shape
df.shape

df.isnull().sum()

# Count number of rows
num_rows = df.shape[0]
print(num_rows)

print(df['First Name'])

print(df[['First Name', 'Gender']])

print(df.iloc[0:5])

male_count = df['Gender'].value_counts()['Male']
print(male_count)
female_count = df['Gender'].value_counts()['Female']
print(female_count)

df.fillna(np.random.randint(0, 100), inplace=True)
print(df)

print(df[df['Id'] > 30])

import numpy as np
df.fillna(0, inplace=True) # replace with 0
print(df)

print(df['Id'].isnull().sum())

print(df['Id'].duplicated().sum())

# Delete a column
df.drop('Gender', axis=1, inplace=True) # Removed the extra space at the beginning of ' Last Name'
print(df)

# Merge DataFrames
data_01 = {
    'Name': ['John', 'Anna', 'Peter', 'Linda'],
    'Salary': [50000, 60000, 70000, 80000]
}
df3 = pd.DataFrame(data_01)

# Recreate df with the 'Name' column
data = {'Name': ['John', 'Peter', 'Anna', 'Linda'],
        'Age': [25, 32, 28, 35],
        'Country': ['USA', 'Canada', 'USA', 'UK']}
df = pd.DataFrame(data)

merged_df = pd.merge(df, df3, on='Name')
print(merged_df)

data_with_nan = {
    'Name': ['John', 'Anna', 'Peter', 'Linda'],
    'Age': [28, None, 35, 32],
    'City': ['New York', 'Paris', None, 'London']
}
df_nan = pd.DataFrame(data_with_nan)

# Drop rows with missing values
print(df_nan.dropna())

# Fill missing values
print(df_nan.fillna({'Age': 0, 'City': 'Unknown'}))

data_with_nan = {
    'Name': ['Mehdhat', 'Ayra', 'Dua', 'Areeba'],
    'Age': [28, None, 35, 32],
    'City': ['Karachi', 'Lahore', None, 'Quetta']
}
df_nan = pd.DataFrame(data_with_nan)

print(df_nan.dropna())

print(df_nan.fillna({'Age': 0, 'City': 'Unknown'}))

df.dtypes

df.size

df.ndim

df.axes

df.memory_usage()

import numpy as np

# Calculate the sum of null values in the 'Gender' column
sum_null_values = df['Age'].isnull().sum()

#Assign the sum of null values to the first row
df.loc[0] = sum_null_values
df

df.isnull().sum()

df.replace(np.nan,30000)

# Apply a function to a column
df['Age'] = df['Age'].apply(lambda x: x + 1)
print(df)

# Apply a function to multiple columns
# Changed 'City' to 'Country' to use an existing column
df['Full_Info'] = df.apply(lambda row: f"{row['Name']}, {row['Age']}, {row['Country']}", axis=1)
print(df)